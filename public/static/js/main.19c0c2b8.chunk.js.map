{"version":3,"sources":["services/authentication-service.js","services/data-service.js","components/cart.js","components/header.js","components/bill.js","pages/checkout.js","components/category-tab.js","components/product-card.js","components/catalogue.js","components/product-modal.js","pages/dashboard.js","pages/home.js","pages/not-found.js","pages/register.js","pages/login.js","components/authenticated-route.js","containers/app.js","index.js"],"names":["DOMAIN","process","AuthenticationService","this","domain","path","bodyJSON","fetch","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","catch","err","console","error","_handleError","fName","lName","email","password","authRequest","getToken","isTokenExpired","decode","exp","Date","now","idToken","localStorage","setItem","getItem","removeItem","loggedIn","url","options","headers","_checkStatus","response","json","reject","message","statusText","status","Error","DataService","_dataRequest","user","rentals","products","title","description","quantity","desc","qty","product","productId","rental","id","done","Cart","props","cart","productMap","reduce","result","curr","Paper","className","List","map","item","index","ListItem","key","ListItemIcon","Avatar","src","ListItemText","secondary","userEmail","Component","Header","action","history","push","logout","replace","onCreate","onCheckout","AppBar","position","Toolbar","firstName","lastName","Button","variant","onClick","icon","faPlus","Hidden","smDown","length","faCartArrowDown","handleProfileAction","faUserPlus","faSignOutAlt","faSignInAlt","withRouter","Bill","state","agreed","onSubmit","FormGroup","TextareaAutosize","rows","rowsMax","readOnly","value","agreement","text","FormControlLabel","name","control","Checkbox","checked","label","onChange","evt","setState","target","disabled","color","Checkout","loading","all","getUserProfile","getAllProducts","getUserRentals","rentalsMap","log","show","showLoading","requests","activateRental","results","activated","filter","updatedCart","find","Grid","container","justify","spacing","xs","md","CategoryTab","items","sm","type","renderChildrenGrid","renderChildrenList","display","children","renderChildren","ProductCard","cartQuantity","Card","CardActionArea","CardMedia","component","image","CardContent","CardActions","faCartPlus","Input","faMinus","Catalogue","activeTab","tabs","render","renderCategoryTab","bind","renderRentalsTab","onCartChange","activeCart","acc","displayList","userId","rentedProducts","Fragment","primary","createdAt","toLocaleString","Tabs","indicatorColor","textColor","centered","tab","Tab","PRODUCT_MODAL_TYPE","DETAILS","NEW","ProductModal","handleInputChange","handleSubmit","reset","onClose","faWindowClose","FormControl","FormLabel","OutlinedInput","placeholder","renderProductDetails","renderProductForm","open","Modal","renderModalContent","Dashboard","modal","onCreateProduct","onRentalChange","postNewProduct","savedProduct","existing","indexOf","exisiting","rentalUpdate","clearCartItem","postNewRental","showModal","faSpinner","spin","size","Home","page","redirectTo","NotFound","Register","returnPath","performRegistration","location","from","register","InputLabel","performRedirect","Login","performLogin","login","AuthenticatedRoute","rest","authed","to","pathname","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.19c0c2b8.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nconst DOMAIN = process.env.REACT_APP_API_HOST || ''\n\nclass _AuthenticationService {\n    constructor() {\n        this.domain = DOMAIN + '/api';\n    }\n\n    authRequest(path, bodyJSON) {\n        return this.fetch(`${this.domain}/user/${path}`, {\n            method: 'POST',\n            body: JSON.stringify(bodyJSON)\n        }).then(res => {\n            this.setToken(res.token); // Setting the token in localStorage\n            return Promise.resolve(res);\n        }).catch(err => {\n            console.error(err);\n            return this._handleError(err);\n        });\n    }\n\n    register({ fName, lName, email, password }) {\n        return this.authRequest('register', {\n            fName,\n            lName,\n            email,\n            password\n        });\n    }\n\n    login(email, password) {\n        // Get a token from api server using the fetch api\n        return this.authRequest('login', {\n            email,\n            password\n        });\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getUser() {\n        // Using jwt-decode npm package to decode the token\n        return this.loggedIn() ? decode(this.getToken()) : null;\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        if(typeof options.body === 'object') options.body = JSON.stringify(options.body);\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _handleError(err) {\n        // Extracts and returns a rejected promise, with the error message (if any)\n        if (!!err.response) {\n            const { response } = err;\n            const json = response.json();\n\n            if(json) return Promise.reject(json.message);\n            else return Promise.reject(response.statusText);\n        }\n\n        return Promise.reject(err);\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}\n\nconst AuthenticationService = new _AuthenticationService();\nexport default AuthenticationService;","import AuthenticationService from \"./authentication-service\";\n\nclass _DataService {\n    constructor() {\n        this.domain = (process.env.REACT_APP_API_HOST || '') + '/api';\n    }\n\n    getUserProfile() {\n        return this._dataRequest('user/profile', {\n            method: 'GET'\n        }).then(({ user }) => user);\n    }\n\n    getUserRentals() {\n        return this._dataRequest('rental/current', {\n            method: 'GET'\n        }).then(({ rentals }) => rentals);\n    }\n\n    getAllProducts() {\n        return this._dataRequest('product/', {\n            method: 'GET'\n        }).then(({ products }) => products);\n    }\n\n    postNewProduct({ title, description, quantity }) {\n        return this._dataRequest('product/create', {\n            method: 'POST',\n            body: {\n                title,\n                desc: description,\n                qty: quantity\n            }\n        }).then(({ product }) => {\n            return product;\n        })\n    }\n\n    postNewRental({ productId, quantity }) {\n        return this._dataRequest('rental/create', {\n            method: 'POST',\n            body: {\n                productId,\n                qty: quantity\n            }\n        }).then(({ rental }) => {\n            return rental;\n        })\n    }\n\n    clearCartItem({ id }) {\n        return this._dataRequest(`rental/cart/${id}`, {\n            method: 'POST'\n        }).then(({ done }) => {\n            return done;\n        })\n    }\n\n    activateRental({ id }) {\n        return this._dataRequest(`rental/activate/${id}`, {\n            method: 'POST'\n        }).then(({ rental }) => {\n            return rental;\n        })\n    }\n\n    rentalUpdate({ id, quantity }) {\n        return this._dataRequest(`rental/update/${id}`, {\n            method: 'POST',\n            body: {\n                qty: quantity\n            }\n        }).then(({ rental }) => {\n            return rental;\n        })\n    }\n\n    _dataRequest(path, options) {\n        return AuthenticationService.fetch(`${this.domain}/${path}`, options)\n    }\n}\n\nconst DataService = new _DataService();\nexport default DataService;","import { Avatar, List, ListItem, ListItemIcon, ListItemText, Paper } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport '../styles/components/cart.scss';\n\nexport default class Cart extends Component {\n    render() {\n        const { cart, products } = this.props;\n\n        const productMap = products.reduce((result, curr) => {\n            result[curr.id] = curr;\n            return result;\n        }, {})\n        return (\n            <Paper className=\"checkout-cart\">\n                <List>\n                    {\n                        cart.map((item, index) => {\n                            const product = productMap[item.productId];\n                            return (\n                                <ListItem key={`checkout-list-${index}`} className=\"cart-item\">\n                                    <ListItemIcon>\n                                        <Avatar src=\"/logo192.png\" />\n                                    </ListItemIcon>\n                                    <ListItemText>{product.title}</ListItemText>\n                                    <ListItemText secondary={`from ${product.userEmail}`}></ListItemText>\n                                    <div className=\"line-end\">\n                                        <ListItemText>x {item.quantity}</ListItemText>\n                                    </div>\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n            </Paper>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport '../styles/components/header.scss';\nimport { AppBar, Toolbar, Button, Hidden } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCartArrowDown, faUserPlus, faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass Header extends Component {\n    handleProfileAction(action) {\n        const { history } = this.props;\n        switch (action) {\n            case 'register':\n                history.push('/register');\n                break;\n            case 'login':\n                history.push('/login');\n                break;\n            case 'logout':\n                AuthenticationService.logout();\n                history.replace('/');\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { user, cart, onCreate, onCheckout } = this.props;\n        return (\n            <AppBar className=\"header\" position=\"sticky\">\n                <Toolbar>\n                    <div className=\"logo-text\">\n                        <span className=\"p1\">Toolo</span>\n                        <span className=\"p2\">city</span>\n                    </div>\n                    <div className=\"header-end\">\n                        {!!user && <span className=\"user-name\">{`${user.firstName} ${user.lastName}`}</span>}\n                        <div className=\"user-actions\">\n                            {!!user && !!onCreate &&\n                                <Button className=\"action new-product\" variant=\"outlined\" onClick={onCreate}>\n                                    <FontAwesomeIcon icon={faPlus} />\n                                    <Hidden smDown>\n                                        New Listing\n                                    </Hidden>\n                                </Button>\n                            }\n                            {!!cart && cart.length > 0 && !!onCheckout &&\n                                <Button className=\"action user-checkout\" variant=\"outlined\" onClick={onCheckout}>\n                                    <FontAwesomeIcon icon={faCartArrowDown} />\n                                    <Hidden smDown>\n                                        Checkout\n                                    </Hidden>\n                                </Button>\n                            }\n                            {!!!user &&\n                                <Button className={`action user-register`} variant=\"contained\" onClick={() => this.handleProfileAction('register')}>\n                                    <FontAwesomeIcon icon={faUserPlus} />\n                                    <Hidden smDown>\n                                        sign up\n                                    </Hidden>\n                                </Button>\n                            }\n                            <Button className={`action user-${!!!user ? 'login' : 'logout'}`} variant=\"text\" onClick={() => this.handleProfileAction(!!user ? 'logout' : 'login')}>\n                                <FontAwesomeIcon icon={!!user ? faSignOutAlt : faSignInAlt} />\n                                <Hidden smDown>\n                                    {!!user ? 'sign out' : 'Login'}\n                                </Hidden>\n                            </Button>\n                        </div>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(Header);","import { Button, Checkbox, FormControlLabel, FormGroup, Paper, TextareaAutosize } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport agreement from '../data/rental-agreement.json';\nimport '../styles/components/bill.scss';\n\nexport default class Bill extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            agreed: false\n        }\n    }\n\n    render() {\n        const { agreed } = this.state;\n        const { onSubmit } = this.props;\n\n        return (\n            <Paper className=\"bill-container\">\n                <FormGroup>\n                    <p className=\"bill-label\">Please read through the following terms, and then submit your request:</p>\n                    <TextareaAutosize rows={10} rowsMax={30} readOnly={true} value={agreement.text} className=\"agreement\" />\n                </FormGroup>\n                <FormControlLabel\n                    name=\"agreed\"\n                    control={<Checkbox checked={agreed} />}\n                    label=\"I agree to the terms\"\n                    className=\"agreed\"\n                    onChange={evt => {\n                        this.setState({ agreed: evt.target.checked })\n                    }}\n                />\n                <div className=\"bill-actions\">\n                    <Button disabled={!agreed} variant=\"contained\" color=\"primary\" onClick={onSubmit}>Confirm</Button>\n                </div>\n            </Paper>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport DataService from '../services/data-service';\nimport Cart from '../components/cart';\nimport Header from '../components/header';\nimport { Grid } from '@material-ui/core';\nimport Bill from '../components/bill';\nimport '../styles/pages/checkout.scss';\nimport { withRouter } from 'react-router-dom';\n\nclass Checkout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null,\n            products: [],\n            cart: [],\n            loading: false\n        }\n    }\n\n    /**\n     * Component has mounted, time to get server data:\n     * 1. user profile,\n     * 2. product list\n     */\n    componentDidMount() {\n        // Pick up the user profile, products, and current user rentals\n        Promise.all([\n            DataService.getUserProfile(),\n            DataService.getAllProducts(),\n            DataService.getUserRentals()\n        ]).then(([user, products, rentals]) => {\n            // Split rentals into cart, and others\n            const rentalsMap = rentals.reduce((result, curr) => {\n                if (curr.status === 'CART') result.cart.push(curr);\n\n                return result;\n            }, { cart: [] });\n\n            this.setState({ user, products, ...rentalsMap });\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    showLoading(show = true) {\n        this.setState({ loading: show });\n    }\n\n    onSubmit() {\n        const { cart } = this.state;\n        const { history } = this.props;\n\n        this.showLoading();\n\n        const requests = [];\n        for (let item of cart) {\n            requests.push(\n                DataService.activateRental({ id: item.id })\n                    .catch(err => {\n                        console.error(err);\n                        return null;\n                    })\n            );\n        }\n\n        Promise.all(requests)\n            .then(results => {\n                // Filter out valid results\n                const activated = results.filter(result => !!result);\n                const updatedCart = cart.filter(item => !!activated.find(rental => rental.id === item.id));\n\n                if (updatedCart.length > 0) {\n                    this.setState({ cart: [...updatedCart], loading: false });\n                } else {\n                    history.replace('/dashboard');\n                }\n            })\n    }\n\n    render() {\n        const { user, cart, products } = this.state;\n        return (\n            <div className=\"checkout-container\">\n                <Header user={user} />\n                <Grid container justify=\"space-evenly\" spacing={5} className=\"checkout-content\">\n                    <Grid item xs={10} md={6}>\n                        <p className=\"checkout-title\">Cart</p>\n                        <Cart cart={cart} products={products} />\n                    </Grid>\n                    <Grid item xs={10} md={4}>\n                        <p className=\"checkout-title\">Agreement</p>\n                        <Bill onSubmit={() => this.onSubmit()} />\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Checkout);","import { Grid, List, ListItem, Paper } from '@material-ui/core';\nimport React, { Component } from 'react';\n\nexport default class CategoryTab extends Component {\n    renderChildrenGrid(items) {\n        return (\n            <Grid container className=\"children-grid\" justify=\"center\">\n                <Grid item container spacing={4} xs={10}>\n                    {\n                        items.map((item, index) => (\n                            <Grid item xs={10} sm={6} md={4} key={`grid-child-${index}`} className=\"grid-child\">\n                                {item}\n                            </Grid>\n                        ))\n                    }\n                </Grid>\n            </Grid>\n        )\n    }\n\n    renderChildrenList(items) {\n        return (\n            <Grid container spacing={4} className=\"children-grid\" justify=\"center\">\n                <Grid item xs={10}>\n                    <Paper>\n                        <List className=\"children-list\">\n                            {\n                                items.map((item, index) => (\n                                    <ListItem key={`list-child-${index}`} className=\"list-child\">\n                                        {item}\n                                    </ListItem>\n                                ))\n                            }\n                        </List>\n                    </Paper>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    renderChildren(items, type) {\n        switch (type) {\n            case 'grid':\n                return this.renderChildrenGrid(items);\n            case 'list':\n                return this.renderChildrenList(items);\n            default:\n                // Default display type is list\n                return this.renderChildrenList(items);\n        }\n    }\n\n    render() {\n        const { display, children } = this.props;\n\n        return (\n            <div className=\"category-tab\">\n                {\n                    this.renderChildren(children, display)\n                }\n            </div>\n        )\n    }\n}\n","import { Button, Card, CardActions, CardContent, CardActionArea, CardMedia, Input } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus, faCartPlus } from '@fortawesome/free-solid-svg-icons';\n\nexport default class ProductCard extends Component {\n    render() {\n        const { product, cartQuantity, type, onChange } = this.props;\n        const { title, description, quantity } = product;\n\n        return (\n            <Card className=\"product-card\">\n                <CardActionArea className=\"product-header\">\n                    <CardMedia component='img' image=\"/pt-1.jpg\" />\n                </CardActionArea>\n                <CardContent className=\"product-content\">\n                    <span>{title}</span>\n                    <span>{description}</span>\n                </CardContent>\n                <CardActions className=\"product-actions\">\n                    <div>\n                        <FontAwesomeIcon icon={faCartPlus} />\n                        <Input type=\"number\" value={cartQuantity} />\n                        <span>/ {quantity}</span>\n                    </div>\n                    <div>\n                        <Button\n                            variant=\"outlined\"\n                            className=\"cart-add\"\n                            disabled={(cartQuantity >= quantity) || (type === 'user')}\n                            onClick={() => onChange(product, cartQuantity + 1)}\n                        >\n                            <FontAwesomeIcon icon={faPlus} />\n                        </Button>\n                        <Button\n                            variant=\"outlined\"\n                            className=\"cart-remove\"\n                            disabled={(cartQuantity <= 0) || (type === 'user')}\n                            onClick={() => onChange(product, cartQuantity - 1)}\n                        >\n                            <FontAwesomeIcon icon={faMinus} />\n                        </Button>\n                    </div>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n","import { Avatar, ListItemIcon, ListItemText, Tab, Tabs } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport '../styles/components/catalogue.scss';\nimport CategoryTab from './category-tab';\nimport ProductCard from './product-card';\n\nexport default class Catalogue extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: 0,\n        }\n\n        this.tabs = [\n            {\n                label: \"Product Catalogue\",\n                render: this.renderCategoryTab.bind(this, 'other')\n            },\n            {\n                label: \"Your Listings\",\n                render: this.renderCategoryTab.bind(this, 'user')\n            },\n            {\n                label: \"Your Rentals\",\n                render: this.renderRentalsTab.bind(this)\n            },\n        ]\n    }\n\n    renderCategoryTab(type) {\n        const { user, products, cart, onCartChange } = this.props;\n\n        const activeCart = cart.reduce((acc, curr) => {\n            acc[curr.productId] = curr;\n            return acc;\n        }, {});\n\n        // Prepare the display list\n        const displayList = products.reduce((result, curr) => {\n            // Filter out current user's products\n            if (type === 'user' && curr.userId === user.id) result.push(curr);\n            // Filter out other user's products\n            if (type === 'other' && curr.userId !== user.id) result.push(curr);\n\n            return result;\n        }, []);\n\n        return (\n            <CategoryTab display=\"grid\">\n                {\n                    displayList.map((product, index) => {\n                        const { id } = product;\n                        const { quantity: cartQuantity } = activeCart[id] || { quantity: 0 };\n\n                        return (\n                            <ProductCard\n                                type={type}\n                                onChange={onCartChange}\n                                key={`rental-category-content-${index}`}\n                                product={product}\n                                cartQuantity={cartQuantity}\n                            />\n                        )\n                    })\n                }\n            </CategoryTab>\n        )\n    }\n\n    renderRentalsTab() {\n        const { products, rentals } = this.props;\n\n        const rentedProducts = products\n            .filter(product => !!(rentals.find(rental => rental.productId === product.id)))\n            .reduce((acc, curr) => {\n                acc[curr.id] = curr;\n                return acc;\n            }, {});\n        return (\n            <CategoryTab display=\"list\">\n                {\n                    rentals.map((rental, index) => {\n                        const { title, userEmail } = rentedProducts[rental.productId];\n                        return (\n                            <React.Fragment key={`rental-tab-content-${index}`}>\n                                <ListItemIcon>\n                                    <Avatar src=\"/logo192.png\" />\n                                </ListItemIcon>\n                                <ListItemText>{title}</ListItemText>\n                                <div>\n                                    <ListItemText>x {rental.quantity}</ListItemText>\n                                </div>\n                                <ListItemText className=\"line-end\" primary={`${userEmail}`} secondary={new Date(rental.createdAt).toLocaleString()}></ListItemText>\n                            </React.Fragment>\n                        )\n                    })\n                }\n            </CategoryTab>\n        )\n    }\n\n    renderUserTab() {\n\n    }\n\n    render() {\n        const { activeTab } = this.state;\n\n        return (\n            <div className=\"catalogue\">\n                <Tabs\n                    className=\"catalogue-tabs\"\n                    value={activeTab}\n                    onChange={(evt, value) => this.setState({ activeTab: value })}\n                    indicatorColor=\"secondary\"\n                    textColor=\"secondary\"\n                    centered\n                >\n                    {\n                        this.tabs.map((tab, index) => (\n                            <Tab key={`catalogue-tab-${index}`} label={tab.label} />\n                        ))\n                    }\n                </Tabs>\n                <div className=\"catalogue-content\">\n                    {\n                        this.tabs.map((tab, index) => (\n                            <div key={`catalogue-content-${index}`} className={`tab-content ${activeTab === index ? '' : 'hide'}`}>\n                                {tab.render()}\n                            </div>\n                        ))\n                    }\n                </div>\n            </div >\n        )\n    }\n}\n","import { faWindowClose } from '@fortawesome/free-regular-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, CardActions, CardContent, FormControl, FormGroup, FormLabel, Grid, Modal, OutlinedInput, TextareaAutosize } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport '../styles/components/product-modal.scss';\n\nexport const PRODUCT_MODAL_TYPE = {\n    DETAILS: 'DETAILS',\n    NEW: 'NEW'\n}\n\nexport default class ProductModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            description: '',\n            quantity: 0,\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    reset() {\n        this.setState({\n            title: '',\n            description: '',\n            quantity: 0,\n        })\n    }\n\n    handleInputChange(evt) {\n        const { target } = evt;\n\n        this.setState({ [target.name]: target.value });\n    }\n\n    handleSubmit() {\n        const { onSubmit } = this.props;\n        const { title, description, quantity } = this.state;\n\n        if (!!onSubmit) onSubmit({ title, description, quantity });\n\n        this.reset();\n    }\n\n    renderProductForm() {\n        const { title, description, quantity } = this.state;\n        const { onClose } = this.props;\n\n        return (\n            <Grid container className=\"product-form-container\" justify=\"center\">\n                <Grid item xs={10} md={6}>\n                    <Card className=\"modal-card\">\n                        <CardContent>\n                            <div className=\"form-header\">\n                                <span className=\"form-title\">New Product Listing</span>\n                                <span onClick={onClose}><FontAwesomeIcon icon={faWindowClose} /></span>\n                            </div>\n                            <FormGroup className=\"product-form\">\n                                <div className=\"part-1\">\n                                    <FormControl className=\"product-name\">\n                                        <FormLabel>Title</FormLabel>\n                                        <OutlinedInput className=\"input-text\" type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"My cool power tool\"\n                                            value={title}\n                                            onChange={this.handleInputChange}\n                                        />\n                                    </FormControl>\n                                    <FormControl className=\"product-qty\">\n                                        <FormLabel>Quantity</FormLabel>\n                                        <OutlinedInput type=\"number\"\n                                            name=\"quantity\"\n                                            placeholder=\"all these tools!\"\n                                            value={quantity}\n                                            onChange={this.handleInputChange}\n                                        />\n                                    </FormControl>\n                                </div>\n                                <FormControl className=\"part-2\">\n                                    <FormLabel>Description</FormLabel>\n                                    <TextareaAutosize className=\"multiline\" rows={5}\n                                        name=\"description\"\n                                        placeholder=\"A shot description about the product. This is where you get to state your buyer requirements too.\"\n                                        value={description}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </FormControl>\n                            </FormGroup>\n                        </CardContent>\n                        <CardActions className=\"form-actions\">\n                            <Button color=\"secondary\" variant=\"contained\" onClick={this.handleSubmit}>\n                                <span>Save</span>\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid>\n        )\n    }\n\n    renderProductDetails() {\n        return (\n            <div className=\"product-details\">\n\n            </div>\n        )\n    }\n\n    renderModalContent(variant) {\n        switch (variant) {\n            case PRODUCT_MODAL_TYPE.DETAILS:\n                return this.renderProductDetails();\n            case PRODUCT_MODAL_TYPE.NEW:\n                return this.renderProductForm();\n\n            default:\n                return null\n        }\n    }\n\n    render() {\n        const { variant, open, onClose } = this.props;\n        return !variant ? null : (\n            <Modal open={open} onClose={onClose} className=\"product-modal\">\n                {\n                    this.renderModalContent(variant)\n                }\n            </Modal>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Catalogue from '../components/catalogue';\nimport Header from '../components/header';\nimport ProductModal, { PRODUCT_MODAL_TYPE } from '../components/product-modal';\nimport DataService from '../services/data-service';\nimport '../styles/pages/dashboard.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null,\n            products: [],\n            rentals: [],\n            cart: [],\n            modal: '',\n            loading: false\n        }\n\n        this.onCreateProduct = this.onCreateProduct.bind(this);\n        this.onCheckout = this.onCheckout.bind(this);\n        this.onRentalChange = this.onRentalChange.bind(this);\n    }\n\n    /**\n     * Component has mounted, time to get server data:\n     * 1. user profile,\n     * 2. product list\n     */\n    componentDidMount() {\n        // Pick up the user profile, products, and current user rentals\n        Promise.all([\n            DataService.getUserProfile(),\n            DataService.getAllProducts(),\n            DataService.getUserRentals()\n        ]).then(([user, products, rentals]) => {\n            // Split rentals into cart, and others\n            const rentalsMap = rentals.reduce((result, curr) => {\n                if (curr.status === 'CART') result.cart.push(curr);\n                else result.rentals.push(curr);\n\n                return result;\n            }, { rentals: [], cart: [] });\n\n            this.setState({ user, products, ...rentalsMap });\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    showLoading(show) {\n        this.setState({ loading: show });\n    }\n\n    onCreateProduct({ title, description, quantity }) {\n        this.showLoading(true);\n        DataService.postNewProduct({ title, description, quantity })\n            .then(savedProduct => {\n                const { products } = this.state;\n                const existing = products.find(product => product.id === savedProduct.id);\n\n                if (existing) products[products.indexOf(existing)] = savedProduct;\n                else products.push(savedProduct);\n\n                this.setState({ products: [...products], modal: '', loading: false });\n            }).catch(err => {\n                console.error(err);\n                this.showLoading(false);\n            })\n    }\n\n    onCheckout() {\n        const { history } = this.props;\n        history.push('/checkout');\n    }\n\n    onRentalChange(product, quantity) {\n        const { cart } = this.state;\n        const exisiting = cart.find(item => item.productId === product.id);\n\n        this.showLoading(true);\n\n        if (!exisiting) {\n            // If the cart item doesn't exist, create it\n            DataService.postNewRental({ productId: product.id, quantity })\n                .then(rental => {\n                    this.setState({ cart: [...this.state.cart, rental], loading: false });\n                })\n                .catch(err => {\n                    console.error(err);\n                    this.showLoading(false);\n                });\n        } else if (quantity > 0) {\n            DataService.rentalUpdate({ id: exisiting.id, quantity: quantity })\n                .then(rental => {\n                    this.setState({ cart: [...cart.filter(item => item.productId !== product.id), rental], loading: false });\n                })\n                .catch(err => {\n                    console.error(err);\n                    this.showLoading(false);\n                });\n        } else {\n            DataService.clearCartItem({ id: exisiting.id })\n                .then(done => {\n                    if (done) this.setState({ cart: [...cart.filter(item => item.productId !== product.id)], loading: false });\n                })\n                .catch(err => {\n                    console.error(err);\n                    this.showLoading(false);\n                });\n        }\n    }\n\n    showModal(type) {\n        if (type in PRODUCT_MODAL_TYPE) {\n            this.setState({ modal: PRODUCT_MODAL_TYPE[type] });\n        }\n    }\n\n    render() {\n        const { user, products, rentals, cart, loading, modal } = this.state;\n\n        return (\n            <div className=\"dashboard-container\">\n                <Header\n                    user={user}\n                    cart={cart}\n                    onCreate={() => this.showModal(PRODUCT_MODAL_TYPE.NEW)}\n                    onCheckout={this.onCheckout}\n                />\n                <Catalogue\n                    user={user}\n                    cart={cart}\n                    products={products}\n                    rentals={rentals}\n                    onCreate={() => this.showModal(PRODUCT_MODAL_TYPE.NEW)}\n                    onCartChange={this.onRentalChange}\n                />\n                <ProductModal\n                    open={!!modal}\n                    variant={modal}\n                    onClose={() => this.setState({ modal: '' })}\n                    onSubmit={this.onCreateProduct}\n                />\n                <div className={`${loading ? '' : 'hide'} loading-screen`}>\n                    <div><FontAwesomeIcon icon={faSpinner} spin size=\"5x\" /></div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Header from '../components/header';\nimport '../styles/pages/home.scss';\nimport { Grid, Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\nclass Home extends Component {\n    redirectTo(page) {\n        const { history } = this.props;\n        history.push(`/${page}`);\n    }\n\n    render() {\n        return (\n            <div className=\"home-container\">\n                <Header />\n                <div className=\"hero\">\n                    <Grid container spacing={10}>\n                        <Grid item container xs={12} className=\"hero-text\">\n                            <Grid item xs={10}>\n                                <span>Yet Another Marketplace</span>\n                            </Grid>\n                            <Grid item xs={10}>\n                                for <span> power tools </span>\n                            </Grid>\n                        </Grid>\n                        <Grid item container xs={12} className=\"hero-actions\">\n                            <Grid item className=\"full-width\" xs={6} md={2}>\n                                <Button className=\"sign-up\" variant=\"contained\" onClick={() => this.redirectTo('register')}>Sign Up for free</Button>\n                            </Grid>\n                            <Grid item xs={6} md={2}>\n                                <Button className=\"browse\" variant=\"contained\" onClick={() => this.redirectTo('dashboard')}>Browse Catalogue</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Home);","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import { Card, CardContent, FormControl, Input, InputLabel, FormGroup, Button, CardActions } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\nimport '../styles/pages/login.scss';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fName: '',\n            lName: '',\n            email: '',\n            password: '',\n            error: '',\n            returnPath: '/dashboard'\n        }\n\n        this.performRegistration = this.performRegistration.bind(this);\n    }\n\n    componentDidMount() {\n        const loggedIn = AuthenticationService.loggedIn();\n        const { location, history } = this.props;\n\n        let { returnPath } = this.state;\n        if (location && location.state && location.state.from) {\n            returnPath = location.state.from;\n        }\n\n        if (loggedIn) {\n            history.replace(returnPath);\n        } else {\n            this.setState({ returnPath });\n        }\n    }\n\n    performRegistration() {\n        const { fName, lName, email, password } = this.state;\n\n        AuthenticationService.register({ fName, lName, email, password })\n            .then(() => {\n                const { location, history } = this.props;\n                history.push(location && location.state && location.state.from ? location.state.from : '/dashboard');\n            }).catch(error => {\n                this.setState({ error })\n            });\n    }\n\n    performRedirect(path) {\n        const { history } = this.props;\n        history.push(`/${path}`);\n    }\n\n    render() {\n        const { error, fName, lName, email, password } = this.state;\n        return (\n            <div className=\"login-container\">\n                <div className=\"logo-text\">\n                    <span className=\"p1\">Toolo</span>\n                    <span className=\"p2\">city</span>\n                </div>\n                <Card className=\"login-card\">\n                    <CardContent>\n                        {error && <div className=\"login-error\">{error}</div>}\n                        <FormGroup>\n                            <FormControl>\n                                <InputLabel>First Name</InputLabel>\n                                <Input type=\"email\" className=\"login-field\" value={fName} onChange={evt => this.setState({ fName: evt.target.value })} />\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel>Last Name</InputLabel>\n                                <Input type=\"email\" className=\"login-field\" value={lName} onChange={evt => this.setState({ lName: evt.target.value })} />\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel>Email</InputLabel>\n                                <Input type=\"email\" className=\"login-field\" value={email} onChange={evt => this.setState({ email: evt.target.value })} />\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel>Password</InputLabel>\n                                <Input type=\"password\" className=\"login-field\" value={password} onChange={evt => this.setState({ password: evt.target.value })} />\n                            </FormControl>\n                        </FormGroup>\n                    </CardContent>\n                    <CardActions className=\"login-actions\">\n                        <Button onClick={this.performRegistration}>\n                            REGISTER\n                        </Button>\n                        <div className=\"login-switch\">\n                            <span>Already have an account?</span>\n                            <Button onClick={() => this.performRedirect('login')}>\n                                Login instead\n                            </Button>\n                        </div>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Register);","import { Card, CardContent, FormControl, Input, InputLabel, FormGroup, CardActions, Button } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\nimport '../styles/pages/login.scss';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            error: '',\n            returnPath: '/dashboard'\n        }\n\n        this.performLogin = this.performLogin.bind(this);\n    }\n\n    performLogin() {\n        const { email, password, returnPath } = this.state;\n\n        AuthenticationService.login(email, password)\n            .then(() => {\n                const { history } = this.props;\n                history.push(returnPath);\n            }).catch(error => {\n                this.setState({ error })\n            });\n    }\n\n    componentDidMount() {\n        const loggedIn = AuthenticationService.loggedIn();\n        const { location, history } = this.props;\n\n        let { returnPath } = this.state;\n        if (location && location.state && location.state.from) {\n            returnPath = location.state.from;\n        }\n\n        if (loggedIn) {\n            history.replace(returnPath);\n        } else {\n            this.setState({ returnPath });\n        }\n    }\n\n    performRedirect(path) {\n        const { history } = this.props;\n        history.push(`/${path}`);\n    }\n\n    render() {\n        const { error, email, password } = this.state;\n        return (\n            <div className=\"login-container\">\n                <div className=\"logo-text\">\n                    <span className=\"p1\">Toolo</span>\n                    <span className=\"p2\">city</span>\n                </div>\n                <Card className=\"login-card\">\n                    <CardContent>\n                        {!!error && <div className=\"login-error\">Heola{error}</div>}\n                        <FormGroup>\n                            <FormControl>\n                                <InputLabel>Email</InputLabel>\n                                <Input type=\"email\" value={email} onChange={evt => this.setState({ email: evt.target.value })} />\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel>Password</InputLabel>\n                                <Input type=\"password\" value={password} onChange={evt => this.setState({ password: evt.target.value })} />\n                            </FormControl>\n                        </FormGroup>\n                    </CardContent>\n                    <CardActions className=\"login-actions\">\n                        <Button onClick={this.performLogin}>\n                            Login\n                        </Button>\n                        <div className=\"login-switch\">\n                            <span>Don't have an account?</span>\n                            <Button onClick={() => this.performRedirect('register')}>\n                                Sign Up instead\n                            </Button>\n                        </div>\n                    </CardActions>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login);","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\nexport default class AuthenticatedRoute extends Component {\n    render() {\n        const { component: Component, ...rest } = this.props;\n        const authed = AuthenticationService.loggedIn();\n        return (\n            <Route\n                {...rest}\n                render={(props) => authed === true\n                    ? <Component {...props} />\n                    : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Checkout from '../pages/checkout';\nimport Dashboard from '../pages/dashboard';\nimport Home from '../pages/home';\nimport NotFound from '../pages/not-found';\nimport Register from '../pages/register';\nimport '../styles/app.scss';\nimport Login from '../pages/login';\nimport AuthenticatedRoute from '../components/authenticated-route';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <AuthenticatedRoute exact path=\"/dashboard\" component={Dashboard} />\n            <AuthenticatedRoute exact path=\"/checkout\" component={Checkout} />\n            <Route path=\"/\" component={Home} />\n            <Route path=\"\" component={Home} />\n            {/* Default to a HTTP 404 page */}\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './containers/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}