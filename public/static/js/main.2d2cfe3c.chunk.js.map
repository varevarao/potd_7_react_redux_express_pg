{"version":3,"sources":["pages/checkout.js","pages/dashboard.js","pages/home.js","pages/not-found.js","pages/register.js","services/authentication-service.js","pages/login.js","components/authenticated-route.js","containers/app.js","index.js"],"names":["Checkout","Component","Dashboard","Home","NotFound","Register","AuthenticationService","this","domain","path","bodyJSON","fetch","method","body","JSON","stringify","then","res","setToken","token","Promise","resolve","catch","err","console","error","_handleError","fName","lName","email","password","authRequest","getToken","isTokenExpired","decode","exp","Date","now","idToken","localStorage","setItem","getItem","removeItem","url","options","headers","loggedIn","_checkStatus","response","json","reject","message","statusText","status","Error","Login","props","state","performLogin","bind","login","location","history","push","from","setState","className","Card","CardContent","FormGroup","FormControl","InputLabel","Input","type","value","onChange","evt","target","onClick","withRouter","AuthenticatedRoute","component","rest","authed","render","to","pathname","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2d2cfe3c.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Checkout extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Dashboard extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class NotFound extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Register extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import decode from 'jwt-decode';\n\nclass _AuthenticationService {\n    constructor() {\n        this.domain = (process.env.REACT_APP_API_HOST || '') + '/api';\n    }\n\n    authRequest(path, bodyJSON) {\n        return this.fetch(`${this.domain}/user/${path}`, {\n            method: 'POST',\n            body: JSON.stringify(bodyJSON)\n        }).then(res => {\n            this.setToken(res.token); // Setting the token in localStorage\n            return Promise.resolve(res);\n        }).catch(err => {\n            console.error(err);\n            return this._handleError(err);\n        });\n    }\n\n    register({ fName, lName, email, password }) {\n        return this.authRequest('register', {\n            fName,\n            lName,\n            email,\n            password\n        });\n    }\n\n    login(email, password) {\n        // Get a token from api server using the fetch api\n        return this.authRequest('login', {\n            email,\n            password\n        });\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken() // GEtting token from localstorage\n        return !!token && !this.isTokenExpired(token) // handwaiving here\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) { // Checking if token is expired. N\n                return true;\n            }\n            else\n                return false;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    setToken(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken)\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token')\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n    }\n\n    getUser() {\n        // Using jwt-decode npm package to decode the token\n        return decode(this.getToken());\n    }\n\n\n    fetch(url, options) {\n        // performs api calls sending the required authentication headers\n        const headers = {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n\n        // Setting Authorization header\n        // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n        if (this.loggedIn()) {\n            headers['Authorization'] = 'Bearer ' + this.getToken()\n        }\n\n        return fetch(url, {\n            headers,\n            ...options\n        })\n            .then(this._checkStatus)\n            .then(response => response.json())\n    }\n\n    _handleError(err) {\n        // Extracts and returns a rejected promise, with the error message (if any)\n        if (!!err.response) {\n            const { response } = err;\n            const json = response.json();\n\n            if(json) return Promise.reject(json.message);\n            else return Promise.reject(response.statusText);\n        }\n\n        return Promise.reject(err);\n    }\n\n    _checkStatus(response) {\n        // raises an error in case response status is not a success\n        if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n            return response\n        } else {\n            var error = new Error(response.statusText)\n            error.response = response\n            throw error\n        }\n    }\n}\n\nconst AuthenticationService = new _AuthenticationService();\nexport default AuthenticationService;","import { Card, CardContent, FormControl, Input, InputLabel, FormGroup } from '@material-ui/core';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\nimport '../styles/pages/login.scss';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            error: ''\n        }\n\n        this.performLogin = this.performLogin.bind(this);\n    }\n\n    performLogin() {\n        const { email, password } = this.state;\n\n        AuthenticationService.login(email, password)\n            .then(() => {\n                const { location, history } = this.props;\n                history.push(location && location.state && location.state.from ? location.state.from : '/dashboard');\n            }).catch(error => {\n                this.setState({ error })\n            });\n    }\n\n    render() {\n        const { error, email, password } = this.state;\n        return (\n            <div className=\"login-container\">\n                <Card className=\"login-card\">\n                    <CardContent>\n                        {error && <div className=\"login-error\">{error}</div>}\n                        <FormGroup>\n                            <FormControl>\n                                <InputLabel>Email</InputLabel>\n                                <Input type=\"email\" value={email} onChange={evt => this.setState({ email: evt.target.value })} />\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel>Password</InputLabel>\n                                <Input type=\"password\" value={password} onChange={evt => this.setState({ password: evt.target.value })} />\n                            </FormControl>\n                            <Input type=\"submit\" onClick={this.performLogin}>Log In</Input>\n                        </FormGroup>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login);","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\nexport default class AuthenticatedRoute extends Component {\n    render() {\n        const { component: Component, ...rest } = this.props;\n        const authed = AuthenticationService.loggedIn();\n        return (\n            <Route\n                {...rest}\n                render={(props) => authed === true\n                    ? <Component {...props} />\n                    : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Checkout from '../pages/checkout';\nimport Dashboard from '../pages/dashboard';\nimport Home from '../pages/home';\nimport NotFound from '../pages/not-found';\nimport Register from '../pages/register';\nimport '../styles/app.scss';\nimport Login from '../pages/login';\nimport AuthenticatedRoute from '../components/authenticated-route';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <AuthenticatedRoute exact path=\"/dashboard\" component={Dashboard} />\n            <AuthenticatedRoute exact path=\"/checkout\" component={Checkout} />\n            <Route path=\"/\" component={Home} />\n            {/* Default to a HTTP 404 page */}\n            <Route component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './containers/app';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}